-- Definition cleanup (Remove StatusId column)
-- ==================
ALTER TABLE public."Definition"
  DROP COLUMN "StatusId";


-- New table creation KRAWorkFlow
-- ==============================
CREATE TABLE IF NOT EXISTS public."KRAWorkFlow"
(
	"KRAWorkFlowId" uuid NOT NULL DEFAULT uuid_generate_v4(),
    "FinancialYearId" integer NOT NULL,
    "GradeRoleTypeId" integer NOT NULL,
    "StatusId" integer NOT NULL,
    "CreatedBy" character varying(100) COLLATE pg_catalog."default",
    "CreatedDate" timestamp with time zone,
    "ModifiedBy" character varying(100) COLLATE pg_catalog."default",
    "ModifiedDate" timestamp with time zone,
    "SystemInfo" character varying(50) COLLATE pg_catalog."default",
	CONSTRAINT "PK_KRAWorkFlow" PRIMARY KEY ("KRAWorkFlowId"),
    CONSTRAINT "FK_KRAWorkFlow_Status_StatusId" FOREIGN KEY ("StatusId")
        REFERENCES public."Status" ("StatusId") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT
)

TABLESPACE pg_default;

ALTER TABLE public."KRAWorkFlow"
    OWNER to hrmsdev;
	

-- Remove the Foreign key constraint from ApplicableRoleType table
-- ===============================================================		
ALTER TABLE public."ApplicableRoleType"
DROP CONSTRAINT "FK_ApplicableRoleType_Status_StatusId";	


-- Update records in Status table
-- ==============================
UPDATE public."Status"
SET "StatusText" = 'SentToHOD',
"StatusDescription" = 'When HR sends to HOD for approval.'
WHERE "StatusId" = 1;
UPDATE public."Status"
SET "StatusText" = 'ApprovedbyHOD',
"StatusDescription" = 'When HOD approves KRAS for a RoleType.'
WHERE "StatusId" = 2;
UPDATE public."Status"
SET "StatusText" = 'EditedByHOD',
"StatusDescription" = 'When HOD edits KRAs for a RoleType.'
WHERE "StatusId" = 3;
UPDATE public."Status"
SET "StatusText" = 'SentToOpHead',
"StatusDescription" = 'When HOD sends back to Operations Head.'
WHERE "StatusId" = 4;
UPDATE public."Status"
SET "StatusText" = 'SendToCEO',
"StatusDescription" = 'When Operations Head sends to CEO for approval.'
WHERE "StatusId" = 5;
UPDATE public."Status"
SET "StatusText" = 'ApprovedByCEO',
"StatusDescription" = 'When CEO approves KRAs.'
WHERE "StatusId" = 6;
UPDATE public."Status"
SET "StatusText" = 'SentToAssociates',
"StatusDescription" = 'When the KRAs sent to Associates.'
WHERE "StatusId" = 7;


-- Rename the DefinitionTransaction table
-- ======================================
ALTER TABLE public."DefinitionTransaction"
  RENAME TO "DefinitionTransaction_OLD";


-- Create the table DefinitionTransaction
-- ======================================
CREATE TABLE IF NOT EXISTS public."DefinitionTransaction"
(
    "DefinitionTransactionId" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "DefinitionId" uuid,
	"FinancialYearId" integer NOT NULL,
    "GradeRoleTypeId" integer NOT NULL,
	"AspectId" integer NOT NULL,
    "Metric" character varying(255) COLLATE pg_catalog."default",
    "OperatorId" integer NOT NULL,
    "MeasurementTypeId" integer NOT NULL,
    "ScaleId" integer,
    "TargetValue" character varying(50) COLLATE pg_catalog."default",
    "TargetPeriodId" integer NOT NULL,
    "IsAccepted" boolean,
    "CreatedBy" character varying(100) COLLATE pg_catalog."default",
    "CreatedDate" timestamp with time zone,
    "ModifiedBy" character varying(100) COLLATE pg_catalog."default",
    "ModifiedDate" timestamp with time zone,
    "SystemInfo" character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT "PK_DefinitionTransaction1" PRIMARY KEY ("DefinitionTransactionId"),
	CONSTRAINT "FK_DefinitionTransaction_Aspect_AspectId" FOREIGN KEY ("AspectId")
		REFERENCES public."Aspect" ("AspectId") MATCH SIMPLE
		ON UPDATE NO ACTION
		ON DELETE RESTRICT;
    CONSTRAINT "FK_DefinitionTransaction_MeasurementType_MeasurementTypeId1" FOREIGN KEY ("MeasurementTypeId")
        REFERENCES public."MeasurementType" ("MeasurementTypeId") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT "FK_DefinitionTransaction_Operator_OperatorId1" FOREIGN KEY ("OperatorId")
        REFERENCES public."Operator" ("OperatorId") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT "FK_DefinitionTransaction_Scale_ScaleId1" FOREIGN KEY ("ScaleId")
        REFERENCES public."Scale" ("ScaleId") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT "FK_DefinitionTransaction_TargetPeriod_TargetPeriodId1" FOREIGN KEY ("TargetPeriodId")
        REFERENCES public."TargetPeriod" ("TargetPeriodId") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT
)

TABLESPACE pg_default;

ALTER TABLE public."DefinitionTransaction"
    OWNER to hrmsdev;

CREATE INDEX "IX_DefinitionTransaction_Aspect_AspectId"
    ON public."DefinitionTransaction"("AspectId");

CREATE INDEX "IX_DefinitionTransaction_MeasurementTypeId1"
    ON public."DefinitionTransaction" USING btree
    ("MeasurementTypeId" ASC NULLS LAST)
    TABLESPACE pg_default;

CREATE INDEX "IX_DefinitionTransaction_OperatorId1"
    ON public."DefinitionTransaction" USING btree
    ("OperatorId" ASC NULLS LAST)
    TABLESPACE pg_default;

CREATE INDEX "IX_DefinitionTransaction_ScaleId1"
    ON public."DefinitionTransaction" USING btree
    ("ScaleId" ASC NULLS LAST)
    TABLESPACE pg_default;

CREATE INDEX "IX_DefinitionTransaction_TargetPeriodId1"
    ON public."DefinitionTransaction" USING btree
    ("TargetPeriodId" ASC NULLS LAST)
    TABLESPACE pg_default;
	
	
	
	
ALTER TABLE public."DefinitionTransaction"
  ADD "AspectId" integer NOT NULL;
  
ALTER TABLE public."DefinitionTransaction"
    ADD CONSTRAINT "FK_DefinitionTransaction_Aspect_AspectId" FOREIGN KEY ("AspectId")
    REFERENCES public."Aspect" ("AspectId") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE RESTRICT;
CREATE INDEX "IX_DefinitionTransaction_Aspect_AspectId"
    ON public."DefinitionTransaction"("AspectId");  	
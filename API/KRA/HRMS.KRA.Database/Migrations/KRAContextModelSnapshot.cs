// <auto-generated />
using System;
using HRMS.KRA.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace HRMS.KRA.Database.Migrations
{
    [DbContext(typeof(KRAContext))]
    partial class KRAContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("HRMS.KRA.Entities.ApplicableRoleType", b =>
                {
                    b.Property<int>("ApplicableRoleTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("FinancialYearId")
                        .HasColumnType("int");

                    b.Property<int>("GradeRoleTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ApplicableRoleTypeId");

                    b.HasIndex("StatusId");

                    b.ToTable("ApplicableRoleType");
                });

            modelBuilder.Entity("HRMS.KRA.Entities.Aspect", b =>
                {
                    b.Property<int>("AspectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AspectName")
                        .IsRequired()
                        .HasColumnType("varchar(70)")
                        .HasMaxLength(70);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("AspectId");

                    b.ToTable("Aspect");
                });

            modelBuilder.Entity("HRMS.KRA.Entities.Comment", b =>
                {
                    b.Property<int>("CommentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("ApplicableRoleTypeId")
                        .HasColumnType("int");

                    b.Property<string>("CommentText")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("FinancialYearId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("CommentID");

                    b.HasIndex("ApplicableRoleTypeId");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("HRMS.KRA.Entities.Definition", b =>
                {
                    b.Property<int>("DefinitionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    //b.Property<int>("ApplicableRoleTypeId")
                    //    .HasColumnType("int");

                    b.Property<int>("AspectId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsCEOApproved")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsHODApproved")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("SourceDefinitionId")
                        .HasColumnType("int");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("DefinitionId");

                    //b.HasIndex("ApplicableRoleTypeId");

                    b.HasIndex("AspectId");

                    b.ToTable("Definition");
                });

            modelBuilder.Entity("HRMS.KRA.Entities.DefinitionDetails", b =>
                {
                    b.Property<int>("DefinitionDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DefinitionId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("MeasurementTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Metric")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("OperatorId")
                        .HasColumnType("int");

                    b.Property<int?>("ScaleId")
                        .HasColumnType("int");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("TargetPeriodId")
                        .HasColumnType("int");

                    b.Property<string>("TargetValue")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("DefinitionDetailsId");

                    b.HasIndex("DefinitionId");

                    b.HasIndex("MeasurementTypeId");

                    b.HasIndex("OperatorId");

                    b.HasIndex("ScaleId");

                    b.HasIndex("TargetPeriodId");

                    b.ToTable("DefinitionDetails");
                });

            modelBuilder.Entity("HRMS.KRA.Entities.DefinitionTransaction", b =>
                {
                    b.Property<int>("DefinitionTransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DefinitionDetailsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("MeasurementTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Metric")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("OperatorId")
                        .HasColumnType("int");

                    b.Property<int?>("ScaleId")
                        .HasColumnType("int");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("TargetPeriodId")
                        .HasColumnType("int");

                    b.Property<string>("TargetValue")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("DefinitionTransactionId");

                    b.HasIndex("DefinitionDetailsId");

                    b.HasIndex("MeasurementTypeId");

                    b.HasIndex("OperatorId");

                    b.HasIndex("ScaleId");

                    b.HasIndex("TargetPeriodId");

                    b.ToTable("DefinitionTransaction");
                });

            modelBuilder.Entity("HRMS.KRA.Entities.MeasurementType", b =>
                {
                    b.Property<int>("MeasurementTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("MeasurementTypeName")
                        .IsRequired()
                        .HasColumnType("varchar(140)")
                        .HasMaxLength(140);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("MeasurementTypeId");

                    b.ToTable("MeasurementType");
                });

            modelBuilder.Entity("HRMS.KRA.Entities.Operator", b =>
                {
                    b.Property<int>("OperatorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("OperatorValue")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("OperatorId");

                    b.ToTable("Operator");
                });

            modelBuilder.Entity("HRMS.KRA.Entities.Scale", b =>
                {
                    b.Property<int>("ScaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int>("MaximumScale")
                        .HasColumnType("integer");

                    b.Property<int>("MinimumScale")
                        .HasColumnType("integer");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ScaleTitle")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ScaleId");

                    b.ToTable("Scale");
                });

            modelBuilder.Entity("HRMS.KRA.Entities.ScaleDetails", b =>
                {
                    b.Property<int>("ScaleDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ScaleDescription")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("ScaleId")
                        .HasColumnType("integer");

                    b.Property<int>("ScaleValue")
                        .HasColumnType("integer");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ScaleDetailId");

                    b.HasIndex("ScaleId");

                    b.ToTable("ScaleDetails");
                });

            modelBuilder.Entity("HRMS.KRA.Entities.Status", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("StatusDescription")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("StatusText")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("StatusId");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("HRMS.KRA.Entities.TargetPeriod", b =>
                {
                    b.Property<int>("TargetPeriodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TargetPeriodValue")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("TargetPeriodId");

                    b.ToTable("TargetPeriod");
                });

            modelBuilder.Entity("HRMS.KRA.Entities.ApplicableRoleType", b =>
                {
                    b.HasOne("HRMS.KRA.Entities.Status", "Status")
                        .WithMany("ApplicableRoleTypes")
                        .HasForeignKey("StatusId")
                        .IsRequired();
                });

            modelBuilder.Entity("HRMS.KRA.Entities.Comment", b =>
                {
                    b.HasOne("HRMS.KRA.Entities.ApplicableRoleType", "ApplicableRoleType")
                        .WithMany("Comments")
                        .HasForeignKey("ApplicableRoleTypeId");
                });

            modelBuilder.Entity("HRMS.KRA.Entities.Definition", b =>
                {
                    b.HasOne("HRMS.KRA.Entities.ApplicableRoleType", "ApplicableRoleType")
                        .WithMany("Definitions")
                        .HasForeignKey("ApplicableRoleTypeId")
                        .IsRequired();

                    b.HasOne("HRMS.KRA.Entities.Aspect", "Aspect")
                        .WithMany("Definitions")
                        .HasForeignKey("AspectId")
                        .IsRequired();
                });

            modelBuilder.Entity("HRMS.KRA.Entities.DefinitionDetails", b =>
                {
                    b.HasOne("HRMS.KRA.Entities.Definition", "Definition")
                        .WithMany("DefinitionDetails")
                        .HasForeignKey("DefinitionId")
                        .IsRequired();

                    b.HasOne("HRMS.KRA.Entities.MeasurementType", "MeasurementType")
                        .WithMany("DefinitionDetails")
                        .HasForeignKey("MeasurementTypeId")
                        .IsRequired();

                    b.HasOne("HRMS.KRA.Entities.Operator", "Operator")
                        .WithMany("DefinitionDetails")
                        .HasForeignKey("OperatorId")
                        .IsRequired();

                    b.HasOne("HRMS.KRA.Entities.Scale", "Scale")
                        .WithMany("DefinitionDetails")
                        .HasForeignKey("ScaleId");

                    b.HasOne("HRMS.KRA.Entities.TargetPeriod", "TargetPeriod")
                        .WithMany("DefinitionDetails")
                        .HasForeignKey("TargetPeriodId")
                        .IsRequired();
                });

            modelBuilder.Entity("HRMS.KRA.Entities.DefinitionTransaction", b =>
                {
                    b.HasOne("HRMS.KRA.Entities.DefinitionDetails", "DefinitionDetails")
                        .WithMany("DefinitionTransactions")
                        .HasForeignKey("DefinitionDetailsId")
                        .IsRequired();

                    b.HasOne("HRMS.KRA.Entities.MeasurementType", "MeasurementType")
                        .WithMany("DefinitionTransactions")
                        .HasForeignKey("MeasurementTypeId")
                        .IsRequired();

                    b.HasOne("HRMS.KRA.Entities.Operator", "Operator")
                        .WithMany("DefinitionTransactions")
                        .HasForeignKey("OperatorId")
                        .IsRequired();

                    b.HasOne("HRMS.KRA.Entities.Scale", "Scale")
                        .WithMany("DefinitionTransactions")
                        .HasForeignKey("ScaleId");

                    b.HasOne("HRMS.KRA.Entities.TargetPeriod", "TargetPeriod")
                        .WithMany("DefinitionTransactions")
                        .HasForeignKey("TargetPeriodId")
                        .IsRequired();
                });

            modelBuilder.Entity("HRMS.KRA.Entities.ScaleDetails", b =>
                {
                    b.HasOne("HRMS.KRA.Entities.Scale", "Scale")
                        .WithMany("ScaleDetails")
                        .HasForeignKey("ScaleId")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}

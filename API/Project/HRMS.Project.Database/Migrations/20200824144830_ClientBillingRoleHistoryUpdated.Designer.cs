// <auto-generated />
using System;
using HRMS.Project.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace HRMS.Project.Database.Migrations
{
    [DbContext(typeof(ProjectDBContext))]
    [Migration("20200824144830_ClientBillingRoleHistoryUpdated")]
    partial class ClientBillingRoleHistoryUpdated
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("HRMS.Project.Entities.Addendum", b =>
                {
                    b.Property<int>("AddendumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("AddendumDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("AddendumNo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Note")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<int>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<string>("RecipientName")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("SOWId")
                        .IsRequired()
                        .HasColumnName("SOWId")
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<int?>("SOWId1")
                        .HasColumnType("integer");

                    b.Property<string>("SystemInfo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("inet_client_addr()")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("AddendumId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("SOWId1");

                    b.ToTable("Addendum");
                });

            modelBuilder.Entity("HRMS.Project.Entities.AllocationPercentage", b =>
                {
                    b.Property<int>("AllocationPercentageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Percentage")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<string>("SystemInfo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("inet_client_addr()")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("AllocationPercentageId");

                    b.ToTable("AllocationPercentage");
                });

            modelBuilder.Entity("HRMS.Project.Entities.AssociateAllocation", b =>
                {
                    b.Property<int>("AssociateAllocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("AllocationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("AllocationPercentage")
                        .HasColumnType("integer");

                    b.Property<decimal?>("ClientBillingPercentage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 0)")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("ClientBillingRoleId")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("EffectiveDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("Integer");

                    b.Property<decimal?>("InternalBillingPercentage")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<int?>("InternalBillingRoleId")
                        .HasColumnType("integer");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsBillable")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsCritical")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsPrimary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValueSql("(('f'))");

                    b.Property<int?>("LeadId")
                        .HasColumnName("LeadID")
                        .HasColumnType("Integer");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ProgramManagerId")
                        .HasColumnName("ProgramManagerID")
                        .HasColumnType("Integer");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("Integer");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ReportingManagerId")
                        .HasColumnType("Integer");

                    b.Property<int?>("RoleMasterId")
                        .HasColumnType("Integer");

                    b.Property<string>("SystemInfo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(100)")
                        .HasDefaultValueSql("inet_client_addr()")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("Trid")
                        .HasColumnName("TRId")
                        .HasColumnType("Integer");

                    b.HasKey("AssociateAllocationId");

                    b.HasIndex("AllocationPercentage");

                    b.HasIndex("ProjectId");

                    b.HasIndex("Trid");

                    b.ToTable("AssociateAllocation");
                });

            modelBuilder.Entity("HRMS.Project.Entities.ClientBillingRoles", b =>
                {
                    b.Property<int>("ClientBillingRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("ClientBillingPercentage")
                        .HasColumnType("integer");

                    b.Property<string>("ClientBillingRoleCode")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ClientBillingRoleName")
                        .HasColumnType("varchar(60)")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<int?>("ClientId")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("NoOfPositions")
                        .HasColumnType("integer");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SystemInfo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("inet_client_addr()")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("ClientBillingRoleId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ClientBillingRoles");
                });

            modelBuilder.Entity("HRMS.Project.Entities.ClientBillingRolesHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("ClientBillingPercentage")
                        .HasColumnType("integer");

                    b.Property<string>("ClientBillingRoleCode")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("ClientBillingRoleId")
                        .HasColumnType("integer");

                    b.Property<string>("ClientBillingRoleName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("NoOfPositions")
                        .HasColumnType("integer");

                    b.Property<int>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SystemInfo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("inet_client_addr()")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("ClientBillingRoleHistory");
                });

            modelBuilder.Entity("HRMS.Project.Entities.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("ActualEndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("ActualStartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ClientId")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("integer");

                    b.Property<int?>("DomainId")
                        .HasColumnType("integer");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("PlannedEndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("PlannedStartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PracticeAreaId")
                        .HasColumnType("integer");

                    b.Property<string>("ProjectCode")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("ProjectStateId")
                        .HasColumnType("integer");

                    b.Property<int?>("ProjectTypeId")
                        .HasColumnType("integer");

                    b.Property<int?>("StatusId")
                        .HasColumnType("integer");

                    b.Property<string>("SystemInfo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("character varying(50)")
                        .HasDefaultValueSql("inet_client_addr()")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("ProjectId");

                    b.HasIndex("ProjectCode")
                        .IsUnique();

                    b.HasIndex("ProjectName")
                        .IsUnique();

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("HRMS.Project.Entities.ProjectManager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("Integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int?>("LeadId")
                        .HasColumnName("LeadID")
                        .HasColumnType("Integer");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ProgramManagerId")
                        .HasColumnName("ProgramManagerID")
                        .HasColumnType("Integer");

                    b.Property<int?>("ProjectId")
                        .HasColumnName("ProjectID")
                        .HasColumnType("Integer");

                    b.Property<int?>("ReportingManagerId")
                        .HasColumnName("ReportingManagerID")
                        .HasColumnType("Integer");

                    b.Property<string>("SystemInfo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("inet_client_addr()")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectManagers");
                });

            modelBuilder.Entity("HRMS.Project.Entities.ProjectRoleDetails", b =>
                {
                    b.Property<int>("RoleAssignmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("Integer");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsPrimaryRole")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<string>("RejectReason")
                        .HasColumnType("text")
                        .IsUnicode(false);

                    b.Property<int?>("RoleMasterId")
                        .HasColumnType("Integer");

                    b.Property<int?>("StatusId")
                        .HasColumnType("integer");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("RoleAssignmentId")
                        .HasName("PK_EmployeeRoleDetails");

                    b.ToTable("ProjectRoleDetails");
                });

            modelBuilder.Entity("HRMS.Project.Entities.ProjectRoles", b =>
                {
                    b.Property<int>("ProjectRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<string>("Responsibilities")
                        .HasColumnType("text");

                    b.Property<int>("RoleMasterId")
                        .HasColumnType("Integer");

                    b.Property<string>("SystemInfo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("inet_client_addr()")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("ProjectRoleId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectRoles");
                });

            modelBuilder.Entity("HRMS.Project.Entities.ProjectWorkFlow", b =>
                {
                    b.Property<int>("WorkFlowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Comments")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<int>("SubmittedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("SubmittedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SubmittedTo")
                        .HasColumnType("integer");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("text");

                    b.Property<int>("WorkFlowStatus")
                        .HasColumnType("integer");

                    b.HasKey("WorkFlowId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectWorkFlow");
                });

            modelBuilder.Entity("HRMS.Project.Entities.ProjectsHistory", b =>
                {
                    b.Property<int>("ProjectHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("ActualEndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ActualStartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ClientId")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("integer");

                    b.Property<int?>("DomainId")
                        .HasColumnType("integer");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("PracticeAreaId")
                        .HasColumnType("integer");

                    b.Property<string>("ProjectCode")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<int>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("ProjectStateId")
                        .HasColumnType("integer");

                    b.Property<int?>("ProjectTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("SystemInfo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("inet_client_addr()")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("ProjectHistoryId");

                    b.ToTable("ProjectsHistory");
                });

            modelBuilder.Entity("HRMS.Project.Entities.SOW", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("Integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<string>("SOWFileName")
                        .HasColumnName("SOWFileName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("SOWId")
                        .IsRequired()
                        .HasColumnName("SOWId")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("SOWSignedDate")
                        .HasColumnName("SOWSignedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SystemInfo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("inet_client_addr()")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("SOWId", "ProjectId")
                        .IsUnique();

                    b.ToTable("SOW");
                });

            modelBuilder.Entity("HRMS.Project.Entities.TalentPool", b =>
                {
                    b.Property<int>("TalentPoolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("PracticeAreaId")
                        .HasColumnType("integer");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<string>("SystemInfo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(100)")
                        .HasDefaultValueSql("inet_client_addr()")
                        .HasMaxLength(50);

                    b.HasKey("TalentPoolId");

                    b.ToTable("TalentPool");
                });

            modelBuilder.Entity("HRMS.Project.Entities.TalentRequisition", b =>
                {
                    b.Property<int>("TrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("ApprovedBy")
                        .HasColumnType("integer");

                    b.Property<int?>("ClientId")
                        .HasColumnType("Integer");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("Integer");

                    b.Property<int?>("DraftedBy")
                        .HasColumnType("integer");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("PracticeAreaId")
                        .HasColumnType("Integer");

                    b.Property<int?>("ProjectDuration")
                        .HasColumnType("integer");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<int?>("RaisedBy")
                        .HasColumnType("integer");

                    b.Property<string>("Remarks")
                        .HasColumnType("varchar(1500)")
                        .HasMaxLength(1500);

                    b.Property<DateTime>("RequestedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("RequiredDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("RequisitionType")
                        .HasColumnType("integer");

                    b.Property<int>("StatusId")
                        .HasColumnType("integer");

                    b.Property<string>("SystemInfo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("inet_client_addr()")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("TargetFulfillmentDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Trcode")
                        .HasColumnName("TRCode")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("TrId");

                    b.HasIndex("ProjectId");

                    b.ToTable("TalentRequisition");
                });

            modelBuilder.Entity("HRMS.Project.Entities.Addendum", b =>
                {
                    b.HasOne("HRMS.Project.Entities.Project", "Project")
                        .WithMany("Addendum")
                        .HasForeignKey("ProjectId")
                        .IsRequired();

                    b.HasOne("HRMS.Project.Entities.SOW", null)
                        .WithMany("Addendum")
                        .HasForeignKey("SOWId1");
                });

            modelBuilder.Entity("HRMS.Project.Entities.AssociateAllocation", b =>
                {
                    b.HasOne("HRMS.Project.Entities.AllocationPercentage", "AllocationPercentageNavigation")
                        .WithMany("AssociateAllocation")
                        .HasForeignKey("AllocationPercentage");

                    b.HasOne("HRMS.Project.Entities.Project", "Project")
                        .WithMany("AssociateAllocation")
                        .HasForeignKey("ProjectId");

                    b.HasOne("HRMS.Project.Entities.TalentRequisition", "Tr")
                        .WithMany("AssociateAllocation")
                        .HasForeignKey("Trid");
                });

            modelBuilder.Entity("HRMS.Project.Entities.ClientBillingRoles", b =>
                {
                    b.HasOne("HRMS.Project.Entities.Project", "Project")
                        .WithMany("ClientBillingRoles")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_ClientBillingRoles_Projects");
                });

            modelBuilder.Entity("HRMS.Project.Entities.ProjectManager", b =>
                {
                    b.HasOne("HRMS.Project.Entities.Project", "Project")
                        .WithMany("ProjectManagers")
                        .HasForeignKey("ProjectId");
                });

            modelBuilder.Entity("HRMS.Project.Entities.ProjectRoles", b =>
                {
                    b.HasOne("HRMS.Project.Entities.Project", "Project")
                        .WithMany("ProjectRoles")
                        .HasForeignKey("ProjectId")
                        .IsRequired();
                });

            modelBuilder.Entity("HRMS.Project.Entities.ProjectWorkFlow", b =>
                {
                    b.HasOne("HRMS.Project.Entities.Project", "Project")
                        .WithMany("ProjectWorkFlow")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HRMS.Project.Entities.SOW", b =>
                {
                    b.HasOne("HRMS.Project.Entities.Project", "Project")
                        .WithMany("SOW")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HRMS.Project.Entities.TalentRequisition", b =>
                {
                    b.HasOne("HRMS.Project.Entities.Project", "Project")
                        .WithMany("TalentRequisition")
                        .HasForeignKey("ProjectId");
                });
#pragma warning restore 612, 618
        }
    }
}

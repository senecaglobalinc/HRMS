// <auto-generated />
using System;
using HRMS.Employee.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace HRMS.Employee.Database.Migrations
{
    [DbContext(typeof(EmployeeDBContext))]
    [Migration("20200701120745_EmployeeType")]
    partial class EmployeeType
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("HRMS.Employee.Entities.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AadharNumber")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("AccessCardNo")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("AlternateMobileNo")
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<DateTime?>("BgvcompletionDate")
                        .HasColumnName("BGVCompletionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("BgvinitiatedDate")
                        .HasColumnName("BGVInitiatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Bgvstatus")
                        .HasColumnName("BGVStatus")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("BgvstatusId")
                        .HasColumnName("BGVStatusId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("BgvtargetDate")
                        .HasColumnName("BGVTargetDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("BloodGroup")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("CareerBreak")
                        .HasColumnType("integer");

                    b.Property<int?>("CompetencyGroup")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ConfirmationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CubicalNumber")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DateofBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("integer");

                    b.Property<int?>("DesignationId")
                        .HasColumnType("integer");

                    b.Property<bool?>("DocumentsUploadFlag")
                        .HasColumnType("boolean");

                    b.Property<string>("EmployeeCode")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("EmployeeTypeId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("EmploymentStartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal?>("Experience")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("ExperienceExcludingCareerBreak")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Gender")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int?>("GradeId")
                        .HasColumnType("integer");

                    b.Property<string>("Hradvisor")
                        .HasColumnName("HRAdvisor")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("JoinDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastName")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("MiddleName")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("MobileNo")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nationality")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("Paid")
                        .HasColumnName("PAID")
                        .HasColumnType("integer");

                    b.Property<string>("Pannumber")
                        .HasColumnName("PANNumber")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PassportDateValidUpto")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PassportIssuingOffice")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PassportNumber")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PersonalEmailAddress")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Pfnumber")
                        .HasColumnName("PFNumber")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<byte[]>("Photograph")
                        .HasColumnType("BYTEA");

                    b.Property<int?>("ProgramManager")
                        .HasColumnType("integer");

                    b.Property<int?>("ProspectiveAssociateId")
                        .HasColumnType("integer");

                    b.Property<string>("Qualification")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("RelievingDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<byte[]>("Remarks")
                        .HasColumnType("BYTEA")
                        .IsUnicode(false);

                    b.Property<int?>("ReportingManager")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ResignationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("StatusId")
                        .HasColumnType("integer");

                    b.Property<string>("SystemInfo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("inet_client_addr()")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("TelephoneNo")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<decimal?>("TotalExperience")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Uannumber")
                        .HasColumnName("UANNumber")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("UserId")
                        .HasColumnName("userid")
                        .HasColumnType("integer");

                    b.Property<string>("WorkEmailAddress")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("EmployeeId");

                    b.HasIndex("ProspectiveAssociateId");

                    b.HasIndex("EmployeeId", "UserId", "IsActive")
                        .HasName("IX_EMployee_UserId_IsActive");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("HRMS.Employee.Entities.EmployeeType", b =>
                {
                    b.Property<int>("EmployeeTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EmployeeTypeId")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EmpType")
                        .HasColumnName("EmpType")
                        .HasColumnType("text");

                    b.Property<string>("EmployeeTypeCode")
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("EmployeeTypeId");

                    b.ToTable("EmployeeTypes");
                });

            modelBuilder.Entity("HRMS.Employee.Entities.ProspectiveAssociate", b =>
                {
                    b.Property<int>("ProspectiveAssociateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ProspectiveAssociateId")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("BGVStatusId")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("DepartmentId")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<int?>("DesignationId")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<int?>("EmployeeID")
                        .HasColumnType("integer");

                    b.Property<string>("EmploymentType")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Gender")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int?>("GradeId")
                        .HasColumnType("integer");

                    b.Property<string>("HRAdvisorName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("JoinDate")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("JoiningStatusId")
                        .HasColumnType("integer");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("ManagerId")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("MiddleName")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("MobileNo")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PersonalEmailAddress")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ReasonForDropOut")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("RecruitedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("StatusID")
                        .HasColumnType("integer");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Technology")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("TechnologyID")
                        .HasColumnType("integer");

                    b.HasKey("ProspectiveAssociateId");

                    b.ToTable("ProspectiveAssociates");
                });

            modelBuilder.Entity("HRMS.Employee.Entities.SkillSearch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CompetencyAreaCode")
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<int?>("CompetencyAreaId")
                        .HasColumnName("CompetencyAreaID")
                        .HasColumnType("integer");

                    b.Property<string>("DesignationCode")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("DesignationId")
                        .HasColumnName("DesignationID")
                        .HasColumnType("integer");

                    b.Property<string>("DesignationName")
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("EmployeeCode")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int?>("EmployeeId")
                        .HasColumnName("EmployeeID")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Experience")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<string>("FirstName")
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<bool?>("IsBillable")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsCritical")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsPrimary")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsSkillPrimary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValueSql("(('t'))");

                    b.Property<string>("LastName")
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<int?>("LastUsed")
                        .HasColumnType("integer");

                    b.Property<string>("ProficiencyLevelCode")
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<int?>("ProficiencyLevelId")
                        .HasColumnName("ProficiencyLevelID")
                        .HasColumnType("integer");

                    b.Property<string>("ProjectCode")
                        .HasColumnType("character varying(15)")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<int?>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<string>("ProjectName")
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("RoleDescription")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("RoleMasterId")
                        .HasColumnType("integer");

                    b.Property<int?>("SkillExperience")
                        .HasColumnType("integer");

                    b.Property<string>("SkillGroupName")
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<int?>("SkillId")
                        .HasColumnName("SkillID")
                        .HasColumnType("integer");

                    b.Property<int?>("SkillIgroupId")
                        .HasColumnName("SkillIGroupID")
                        .HasColumnType("integer");

                    b.Property<string>("SkillName")
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("SkillSearch");
                });

            modelBuilder.Entity("HRMS.Employee.Entities.Employee", b =>
                {
                    b.HasOne("HRMS.Employee.Entities.ProspectiveAssociate", null)
                        .WithMany("Employees")
                        .HasForeignKey("ProspectiveAssociateId");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using HRMS.Employee.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace HRMS.Employee.Database.Migrations
{
    [DbContext(typeof(EmployeeDBContext))]
    [Migration("20200723070932_ValueType")]
    partial class ValueType
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("HRMS.Employee.Entities.AssociateCertification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CertificationId")
                        .HasColumnName("CertificationId")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("EmployeeId")
                        .HasColumnName("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<string>("Institution")
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SkillGroupId")
                        .HasColumnName("SkillGroupId")
                        .HasColumnType("integer");

                    b.Property<string>("Specialization")
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ValidFrom")
                        .HasColumnType("character varying(4)")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("ValidUpto")
                        .HasColumnType("character varying(4)")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("AssociateCertifications");
                });

            modelBuilder.Entity("HRMS.Employee.Entities.AssociateCertificationsHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CertificationId")
                        .HasColumnName("CertificationId")
                        .HasColumnType("integer");

                    b.Property<int?>("EmployeeId")
                        .HasColumnName("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<string>("Institution")
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<int?>("SkillGroupId")
                        .IsRequired()
                        .HasColumnName("SkillGroupId")
                        .HasColumnType("integer");

                    b.Property<string>("Specialization")
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("ValidFrom")
                        .HasColumnType("character varying(4)")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("ValidUpto")
                        .HasColumnType("character varying(4)")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("AssociateCertificationsHistory");
                });

            modelBuilder.Entity("HRMS.Employee.Entities.AssociateDesignation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("DesignationId")
                        .HasColumnName("DesignationId")
                        .HasColumnType("integer");

                    b.Property<int?>("EmployeeId")
                        .HasColumnName("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("GradeId")
                        .HasColumnName("GradeId")
                        .HasColumnType("integer");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("AssociateDesignations");
                });

            modelBuilder.Entity("HRMS.Employee.Entities.AssociateHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("DepartmentId")
                        .HasColumnName("DepartmentId")
                        .HasColumnType("integer");

                    b.Property<string>("Designation")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("EmployeeId")
                        .HasColumnName("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<int?>("GradeId")
                        .HasColumnName("GradeId")
                        .HasColumnType("integer");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("PracticeAreaId")
                        .HasColumnName("PracticeAreaId")
                        .HasColumnType("integer");

                    b.Property<string>("Remarks")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("AssociateHistory");
                });

            modelBuilder.Entity("HRMS.Employee.Entities.AssociateSkillGap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CompetencyAreaId")
                        .HasColumnName("CompetencyAreaId")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CurrentProficiencyLevelId")
                        .HasColumnName("CurrentProficiencyLevelId")
                        .HasColumnType("integer");

                    b.Property<int?>("EmployeeId")
                        .HasColumnName("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ProjectSkillId")
                        .HasColumnName("ProjectSkillId")
                        .HasColumnType("integer");

                    b.Property<int?>("RequiredProficiencyLevelId")
                        .HasColumnName("RequiredProficiencyLevelId")
                        .HasColumnType("integer");

                    b.Property<int?>("StatusId")
                        .HasColumnName("StatusId")
                        .HasColumnType("integer");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("AssociateSkillGap");
                });

            modelBuilder.Entity("HRMS.Employee.Entities.AssociatesMembership", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("EmployeeId")
                        .IsRequired()
                        .HasColumnName("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<string>("Institution")
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ProgramTitle")
                        .IsRequired()
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("Specialization")
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ValidFrom")
                        .IsRequired()
                        .HasColumnType("character varying(4)")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("ValidUpto")
                        .HasColumnType("character varying(4)")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.HasKey("ID");

                    b.ToTable("AssociatesMemberships");
                });

            modelBuilder.Entity("HRMS.Employee.Entities.AssociatesMembershipHistory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("EmployeeId")
                        .HasColumnName("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<string>("Institution")
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("ProgramTitle")
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("Specialization")
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("ValidFrom")
                        .HasColumnType("character varying(4)")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("ValidUpto")
                        .HasColumnType("character varying(4)")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.HasKey("ID");

                    b.ToTable("AssociatesMembershipsHistory");
                });

            modelBuilder.Entity("HRMS.Employee.Entities.Contacts", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AddressLine1")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<string>("AddressLine2")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<string>("AddressType")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("City")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Country")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("EmployeeId")
                        .HasColumnName("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PostalCode")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("State")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("HRMS.Employee.Entities.EducationDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("AcademicCompletedYear")
                        .HasColumnName("AcademicCompletedYear")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("AcademicYearFrom")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("AcademicYearTo")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EducationalQualification")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("EmployeeId")
                        .HasColumnName("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<string>("Grade")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Institution")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Marks")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ProgramType")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Specialization")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("EducationDetails");
                });

            modelBuilder.Entity("HRMS.Employee.Entities.EmergencyContactDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AddressLine1")
                        .HasColumnType("character varying(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("AddressLine2")
                        .HasColumnType("character varying(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("City")
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("ContactName")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ContactType")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Country")
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("EmployeeId")
                        .HasColumnName("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsPrimary")
                        .HasColumnType("boolean");

                    b.Property<string>("MobileNo")
                        .HasColumnType("character varying(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PostalCode")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Relationship")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("State")
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TelePhoneNo")
                        .HasColumnType("character varying(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("EmergencyContactDetails");
                });

            modelBuilder.Entity("HRMS.Employee.Entities.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AadharNumber")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("AccessCardNo")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("AlternateMobileNo")
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<DateTime?>("BgvcompletionDate")
                        .HasColumnName("BGVCompletionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("BgvinitiatedDate")
                        .HasColumnName("BGVInitiatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Bgvstatus")
                        .HasColumnName("BGVStatus")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("BgvstatusId")
                        .HasColumnName("BGVStatusId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("BgvtargetDate")
                        .HasColumnName("BGVTargetDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("BloodGroup")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("CareerBreak")
                        .HasColumnType("integer");

                    b.Property<int?>("CompetencyGroup")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ConfirmationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CubicalNumber")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DateofBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("integer");

                    b.Property<int?>("DesignationId")
                        .HasColumnType("integer");

                    b.Property<bool?>("DocumentsUploadFlag")
                        .HasColumnType("boolean");

                    b.Property<string>("EmployeeCode")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("EmployeeTypeId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("EmploymentStartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal?>("Experience")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("ExperienceExcludingCareerBreak")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Gender")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int?>("GradeId")
                        .HasColumnType("integer");

                    b.Property<string>("Hradvisor")
                        .HasColumnName("HRAdvisor")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("JoinDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastName")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("MiddleName")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("MobileNo")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nationality")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("Paid")
                        .HasColumnName("PAID")
                        .HasColumnType("integer");

                    b.Property<string>("Pannumber")
                        .HasColumnName("PANNumber")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PassportDateValidUpto")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PassportIssuingOffice")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PassportNumber")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PersonalEmailAddress")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Pfnumber")
                        .HasColumnName("PFNumber")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<byte[]>("Photograph")
                        .HasColumnType("BYTEA");

                    b.Property<int?>("ProgramManager")
                        .HasColumnType("integer");

                    b.Property<string>("Qualification")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("RelievingDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<byte[]>("Remarks")
                        .HasColumnType("BYTEA")
                        .IsUnicode(false);

                    b.Property<int?>("ReportingManager")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ResignationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("StatusId")
                        .HasColumnType("integer");

                    b.Property<string>("SystemInfo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("inet_client_addr()")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("TelephoneNo")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<decimal?>("TotalExperience")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Uannumber")
                        .HasColumnName("UANNumber")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("UserId")
                        .HasColumnName("userid")
                        .HasColumnType("integer");

                    b.Property<string>("WorkEmailAddress")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("EmployeeId");

                    b.HasIndex("EmployeeId", "UserId", "IsActive")
                        .HasName("IX_EMployee_UserId_IsActive");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("HRMS.Employee.Entities.EmployeeProjects", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("DomainId")
                        .HasColumnName("DomainId")
                        .HasColumnType("integer");

                    b.Property<int?>("Duration")
                        .HasColumnName("Duration")
                        .HasColumnType("integer");

                    b.Property<int?>("EmployeeId")
                        .HasColumnName("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("KeyAchievements")
                        .HasColumnType("text")
                        .IsUnicode(false);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("OrganizationName")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ProjectName")
                        .HasColumnType("text")
                        .IsUnicode(false);

                    b.Property<int?>("RoleMasterId")
                        .HasColumnName("RoleMasterId")
                        .HasColumnType("integer");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("EmployeeProjects");
                });

            modelBuilder.Entity("HRMS.Employee.Entities.EmployeeSkill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CompetencyAreaId")
                        .HasColumnName("CompetencyAreaId")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("EmployeeId")
                        .HasColumnName("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<int?>("Experience")
                        .HasColumnName("Experience")
                        .HasColumnType("integer");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsPrimary")
                        .HasColumnType("boolean");

                    b.Property<int?>("LastUsed")
                        .HasColumnName("LastUsed")
                        .HasColumnType("integer");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ProficiencyLevelId")
                        .HasColumnName("ProficiencyLevelId")
                        .HasColumnType("integer");

                    b.Property<int?>("RequistionId")
                        .HasColumnName("RequistionId")
                        .HasColumnType("integer");

                    b.Property<int?>("SkillGroupID")
                        .HasColumnName("SkillGroupID")
                        .HasColumnType("integer");

                    b.Property<int?>("SkillID")
                        .HasColumnName("SkillID")
                        .HasColumnType("integer");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("EmployeeSkills");
                });

            modelBuilder.Entity("HRMS.Employee.Entities.EmployeeSkillsHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CompetencyAreaId")
                        .HasColumnName("CompetencyAreaId")
                        .HasColumnType("integer");

                    b.Property<int?>("EmployeeId")
                        .HasColumnName("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<int?>("Experience")
                        .HasColumnName("Experience")
                        .HasColumnType("integer");

                    b.Property<bool?>("IsPrimary")
                        .HasColumnType("boolean");

                    b.Property<int?>("LastUsed")
                        .HasColumnName("LastUsed")
                        .HasColumnType("integer");

                    b.Property<int?>("ProficiencyLevelId")
                        .HasColumnName("ProficiencyLevelId")
                        .HasColumnType("integer");

                    b.Property<int?>("SkillGroupID")
                        .HasColumnName("SkillGroupID")
                        .HasColumnType("integer");

                    b.Property<int?>("SkillID")
                        .HasColumnName("SkillID")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("EmployeeSkillsHistory");
                });

            modelBuilder.Entity("HRMS.Employee.Entities.EmployeeType", b =>
                {
                    b.Property<int>("EmployeeTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EmployeeTypeId")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EmpType")
                        .HasColumnName("EmpType")
                        .HasColumnType("text");

                    b.Property<string>("EmployeeTypeCode")
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("EmployeeTypeId");

                    b.ToTable("EmployeeTypes");
                });

            modelBuilder.Entity("HRMS.Employee.Entities.FamilyDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("EmployeeId")
                        .HasColumnName("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Occupation")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("RelationShip")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("FamilyDetails");
                });

            modelBuilder.Entity("HRMS.Employee.Entities.PreviousEmploymentDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Address")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Designation")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("EmployeeId")
                        .HasColumnName("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("LeavingReason")
                        .HasColumnType("text")
                        .IsUnicode(false);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ServiceFrom")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("ServiceTo")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("PreviousEmploymentDetails");
                });

            modelBuilder.Entity("HRMS.Employee.Entities.ProfessionalDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CurrentValidity")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("EmployeeId")
                        .HasColumnName("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ProgramTitle")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ProgramType")
                        .HasColumnType("character varying(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Year")
                        .HasColumnName("Year")
                        .HasColumnType("integer");

                    b.Property<string>("institution")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("specialization")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("ProfessionalDetails");
                });

            modelBuilder.Entity("HRMS.Employee.Entities.ProfessionalReferences", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CompanyAddress")
                        .HasColumnType("text")
                        .IsUnicode(false);

                    b.Property<string>("CompanyName")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Designation")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("EmployeeId")
                        .HasColumnName("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("MobileNo")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("OfficeEmailAddress")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("ProfessionalReferences");
                });

            modelBuilder.Entity("HRMS.Employee.Entities.ProspectiveAssociate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("BGVStatusId")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("DepartmentId")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<int?>("DesignationId")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<int?>("EmployeeID")
                        .HasColumnType("integer");

                    b.Property<string>("EmploymentType")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Gender")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int?>("GradeId")
                        .HasColumnType("integer");

                    b.Property<string>("HRAdvisorName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("JoinDate")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("JoiningStatusId")
                        .HasColumnType("integer");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("ManagerId")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("MiddleName")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("MobileNo")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PersonalEmailAddress")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ReasonForDropOut")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("RecruitedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("StatusID")
                        .HasColumnType("integer");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Technology")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("TechnologyID")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("ProspectiveAssociates");
                });

            modelBuilder.Entity("HRMS.Employee.Entities.SkillSearch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CompetencyAreaCode")
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<int?>("CompetencyAreaId")
                        .HasColumnName("CompetencyAreaID")
                        .HasColumnType("integer");

                    b.Property<string>("DesignationCode")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("DesignationId")
                        .HasColumnName("DesignationID")
                        .HasColumnType("integer");

                    b.Property<string>("DesignationName")
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("EmployeeCode")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int?>("EmployeeId")
                        .HasColumnName("EmployeeID")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Experience")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<string>("FirstName")
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<bool?>("IsBillable")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsCritical")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsPrimary")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsSkillPrimary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValueSql("(('t'))");

                    b.Property<string>("LastName")
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<int?>("LastUsed")
                        .HasColumnType("integer");

                    b.Property<string>("ProficiencyLevelCode")
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<int?>("ProficiencyLevelId")
                        .HasColumnName("ProficiencyLevelID")
                        .HasColumnType("integer");

                    b.Property<string>("ProjectCode")
                        .HasColumnType("character varying(15)")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<int?>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<string>("ProjectName")
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("RoleDescription")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("RoleMasterId")
                        .HasColumnType("integer");

                    b.Property<int?>("SkillExperience")
                        .HasColumnType("integer");

                    b.Property<string>("SkillGroupName")
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<int?>("SkillId")
                        .HasColumnName("SkillID")
                        .HasColumnType("integer");

                    b.Property<int?>("SkillIgroupId")
                        .HasColumnName("SkillIGroupID")
                        .HasColumnType("integer");

                    b.Property<string>("SkillName")
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("SkillSearch");
                });

            modelBuilder.Entity("HRMS.Employee.Entities.TagAssociate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("EmployeeId")
                        .HasColumnName("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<int>("ManagerId")
                        .HasColumnName("ManagerId")
                        .HasColumnType("integer");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TagAssociateListName")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("TagAssociate");
                });

            modelBuilder.Entity("HRMS.Employee.Entities.UploadFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("EmployeeId")
                        .HasColumnName("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<string>("FileName")
                        .HasColumnType("text")
                        .IsUnicode(false);

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("UploadFiles");
                });

            modelBuilder.Entity("HRMS.Employee.Entities.ValueType", b =>
                {
                    b.Property<int>("ValueTypeKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ValueTypeId")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("ValueTypeName")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("ValueTypeKey");

                    b.ToTable("ValueType");
                });

            modelBuilder.Entity("HRMS.Employee.Entities.lkValue", b =>
                {
                    b.Property<int>("ValueKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ValueId")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("ValueName")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("ValueTypeKey")
                        .HasColumnType("integer");

                    b.HasKey("ValueKey");

                    b.HasIndex("ValueTypeKey");

                    b.ToTable("lkValue");
                });

            modelBuilder.Entity("HRMS.Employee.Entities.lkValue", b =>
                {
                    b.HasOne("HRMS.Employee.Entities.ValueType", "ValueType")
                        .WithMany("lkValue")
                        .HasForeignKey("ValueTypeKey")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}

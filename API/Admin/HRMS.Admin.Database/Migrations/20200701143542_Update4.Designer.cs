// <auto-generated />
using System;
using HRMS.Admin.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace HRMS.Admin.Database.Migrations
{
    [DbContext(typeof(AdminContext))]
    [Migration("20200701143542_Update4")]
    partial class Update4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("HRMS.Admin.Entities.CategoryMaster", b =>
                {
                    b.Property<int>("CategoryMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("CategoryMasterId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("HRMS.Admin.Entities.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClientCode")
                        .IsRequired()
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.Property<string>("ClientName")
                        .HasColumnType("text");

                    b.Property<string>("ClientNameHash")
                        .HasColumnType("varchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ClientRegisterName")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ClientId");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("HRMS.Admin.Entities.CompetencyArea", b =>
                {
                    b.Property<int>("CompetencyAreaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CompetencyAreaCode")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CompetencyAreaDescription")
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("CompetencyAreaId");

                    b.ToTable("CompetencyArea");
                });

            modelBuilder.Entity("HRMS.Admin.Entities.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DepartmentCode")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256);

                    b.Property<int?>("DepartmentHeadId")
                        .HasColumnType("integer");

                    b.Property<int>("DepartmentTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("DepartmentId");

                    b.HasIndex("DepartmentTypeId");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("HRMS.Admin.Entities.DepartmentType", b =>
                {
                    b.Property<int>("DepartmentTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DepartmentTypeDescription")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("DepartmentTypeId");

                    b.ToTable("DepartmentType");
                });

            modelBuilder.Entity("HRMS.Admin.Entities.Designation", b =>
                {
                    b.Property<int>("DesignationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DesignationCode")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DesignationName")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256);

                    b.Property<int?>("GradeId")
                        .HasColumnType("integer");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("DesignationId");

                    b.HasIndex("GradeId");

                    b.ToTable("Designation");
                });

            modelBuilder.Entity("HRMS.Admin.Entities.Domain", b =>
                {
                    b.Property<int>("DomainID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DomainName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("DomainID");

                    b.ToTable("Domain");
                });

            modelBuilder.Entity("HRMS.Admin.Entities.Grade", b =>
                {
                    b.Property<int>("GradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("GradeCode")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("GradeName")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("GradeId");

                    b.ToTable("Grade");
                });

            modelBuilder.Entity("HRMS.Admin.Entities.NotificationConfiguration", b =>
                {
                    b.Property<int>("NotificationConfigurationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CategoryMasterId")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EmailCC")
                        .HasColumnType("varchar(512)")
                        .HasMaxLength(512);

                    b.Property<string>("EmailContent")
                        .HasColumnType("text");

                    b.Property<string>("EmailFrom")
                        .HasColumnType("varchar(512)")
                        .HasMaxLength(512);

                    b.Property<string>("EmailSubject")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("EmailTo")
                        .HasColumnType("varchar(512)")
                        .HasMaxLength(512);

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("NotificationTypeId")
                        .HasColumnType("integer");

                    b.Property<int?>("SLA")
                        .HasColumnType("int");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("NotificationConfigurationId");

                    b.HasIndex("CategoryMasterId");

                    b.HasIndex("NotificationTypeId");

                    b.ToTable("NotificationConfiguration");
                });

            modelBuilder.Entity("HRMS.Admin.Entities.NotificationType", b =>
                {
                    b.Property<int>("NotificationTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CategoryMasterId")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NotificationCode")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("NotificationDescription")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("NotificationTypeId");

                    b.HasIndex("CategoryMasterId");

                    b.ToTable("NotificationType");
                });

            modelBuilder.Entity("HRMS.Admin.Entities.PracticeArea", b =>
                {
                    b.Property<int>("PracticeAreaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PracticeAreaCode")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(20);

                    b.Property<string>("PracticeAreaDescription")
                        .IsRequired()
                        .HasColumnType("varchar(512)")
                        .HasMaxLength(512);

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("PracticeAreaId");

                    b.ToTable("PracticeArea");
                });

            modelBuilder.Entity("HRMS.Admin.Entities.ProficiencyLevel", b =>
                {
                    b.Property<int>("ProficiencyLevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ProficiencyLevelCode")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("ProficiencyLevelDescription")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ProficiencyLevelId");

                    b.ToTable("ProficiencyLevel");
                });

            modelBuilder.Entity("HRMS.Admin.Entities.ProjectType", b =>
                {
                    b.Property<int>("ProjectTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ProjectTypeCode")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ProjectTypeId");

                    b.ToTable("ProjectType");
                });

            modelBuilder.Entity("HRMS.Admin.Entities.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("integer");

                    b.Property<string>("EducationQualification")
                        .HasColumnType("text");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("KeyResponsibilities")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RoleDescription")
                        .HasColumnType("text")
                        .HasMaxLength(256);

                    b.Property<string>("RoleName")
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("RoleId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("HRMS.Admin.Entities.RoleMaster", b =>
                {
                    b.Property<int>("RoleMasterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("integer");

                    b.Property<string>("EducationQualification")
                        .HasColumnType("text");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("KeyResponsibilities")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("PrefixID")
                        .HasColumnType("integer");

                    b.Property<string>("RoleDescription")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("SGRoleID")
                        .HasColumnType("integer");

                    b.Property<int?>("SuffixID")
                        .HasColumnType("integer");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("RoleMasterID");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("PrefixID");

                    b.HasIndex("SGRoleID");

                    b.HasIndex("SuffixID");

                    b.ToTable("RoleMaster");
                });

            modelBuilder.Entity("HRMS.Admin.Entities.SGRole", b =>
                {
                    b.Property<int>("SGRoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("integer");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SGRoleName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("SGRoleID");

                    b.HasIndex("DepartmentId");

                    b.ToTable("SGRole");
                });

            modelBuilder.Entity("HRMS.Admin.Entities.SGRolePrefix", b =>
                {
                    b.Property<int>("PrefixID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PrefixName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("PrefixID");

                    b.ToTable("SGRolePrefix");
                });

            modelBuilder.Entity("HRMS.Admin.Entities.SGRoleSuffix", b =>
                {
                    b.Property<int>("SuffixID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SuffixName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("SuffixID");

                    b.ToTable("SGRoleSuffix");
                });

            modelBuilder.Entity("HRMS.Admin.Entities.Skill", b =>
                {
                    b.Property<int>("SkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CompetencyAreaId")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsApproved")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SkillCode")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SkillDescription")
                        .IsRequired()
                        .HasColumnType("varchar(512)")
                        .HasMaxLength(512);

                    b.Property<int?>("SkillGroupId")
                        .HasColumnType("integer");

                    b.Property<string>("SkillName")
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("SkillId");

                    b.HasIndex("CompetencyAreaId");

                    b.HasIndex("SkillGroupId");

                    b.ToTable("Skill");
                });

            modelBuilder.Entity("HRMS.Admin.Entities.SkillGroup", b =>
                {
                    b.Property<int>("SkillGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CompetencyAreaId")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SkillGroupName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("SkillGroupId");

                    b.HasIndex("CompetencyAreaId");

                    b.ToTable("SkillGroup");
                });

            modelBuilder.Entity("HRMS.Admin.Entities.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CategoryMasterId")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("StatusCode")
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("StatusDescription")
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256);

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CategoryMasterId");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("HRMS.Admin.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("text")
                        .HasMaxLength(254);

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsSuperAdmin")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UserName")
                        .HasColumnType("text")
                        .HasMaxLength(256);

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HRMS.Admin.Entities.UserRole", b =>
                {
                    b.Property<int>("UserRoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsPrimary")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("UserRoleID");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("HRMS.Admin.Entities.Department", b =>
                {
                    b.HasOne("HRMS.Admin.Entities.DepartmentType", "DepartmentType")
                        .WithMany("Departments")
                        .HasForeignKey("DepartmentTypeId")
                        .IsRequired();
                });

            modelBuilder.Entity("HRMS.Admin.Entities.Designation", b =>
                {
                    b.HasOne("HRMS.Admin.Entities.Grade", "Grade")
                        .WithMany("Designations")
                        .HasForeignKey("GradeId");
                });

            modelBuilder.Entity("HRMS.Admin.Entities.NotificationConfiguration", b =>
                {
                    b.HasOne("HRMS.Admin.Entities.CategoryMaster", "CategoryMaster")
                        .WithMany("NotificationConfigurations")
                        .HasForeignKey("CategoryMasterId");

                    b.HasOne("HRMS.Admin.Entities.NotificationType", "NotificationType")
                        .WithMany("NotificationConfigurations")
                        .HasForeignKey("NotificationTypeId");
                });

            modelBuilder.Entity("HRMS.Admin.Entities.NotificationType", b =>
                {
                    b.HasOne("HRMS.Admin.Entities.CategoryMaster", "CategoryMaster")
                        .WithMany("NotificationTypes")
                        .HasForeignKey("CategoryMasterId");
                });

            modelBuilder.Entity("HRMS.Admin.Entities.Role", b =>
                {
                    b.HasOne("HRMS.Admin.Entities.Department", "Department")
                        .WithMany("Roles")
                        .HasForeignKey("DepartmentId");
                });

            modelBuilder.Entity("HRMS.Admin.Entities.RoleMaster", b =>
                {
                    b.HasOne("HRMS.Admin.Entities.Department", "Department")
                        .WithMany("RoleMasters")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("HRMS.Admin.Entities.SGRolePrefix", "SGRolePrefix")
                        .WithMany("RoleMasters")
                        .HasForeignKey("PrefixID");

                    b.HasOne("HRMS.Admin.Entities.SGRole", "SGRole")
                        .WithMany("RoleMasters")
                        .HasForeignKey("SGRoleID")
                        .IsRequired();

                    b.HasOne("HRMS.Admin.Entities.SGRoleSuffix", "SGRoleSuffix")
                        .WithMany("RoleMasters")
                        .HasForeignKey("SuffixID");
                });

            modelBuilder.Entity("HRMS.Admin.Entities.SGRole", b =>
                {
                    b.HasOne("HRMS.Admin.Entities.Department", "Department")
                        .WithMany("SGRoles")
                        .HasForeignKey("DepartmentId")
                        .IsRequired();
                });

            modelBuilder.Entity("HRMS.Admin.Entities.Skill", b =>
                {
                    b.HasOne("HRMS.Admin.Entities.CompetencyArea", "CompetencyArea")
                        .WithMany("Skills")
                        .HasForeignKey("CompetencyAreaId");

                    b.HasOne("HRMS.Admin.Entities.SkillGroup", "SkillGroup")
                        .WithMany("Skills")
                        .HasForeignKey("SkillGroupId");
                });

            modelBuilder.Entity("HRMS.Admin.Entities.SkillGroup", b =>
                {
                    b.HasOne("HRMS.Admin.Entities.CompetencyArea", "CompetencyArea")
                        .WithMany("SkillGroups")
                        .HasForeignKey("CompetencyAreaId");
                });

            modelBuilder.Entity("HRMS.Admin.Entities.Status", b =>
                {
                    b.HasOne("HRMS.Admin.Entities.CategoryMaster", "CategoryMaster")
                        .WithMany("Status")
                        .HasForeignKey("CategoryMasterId");
                });

            modelBuilder.Entity("HRMS.Admin.Entities.UserRole", b =>
                {
                    b.HasOne("HRMS.Admin.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId");

                    b.HasOne("HRMS.Admin.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
